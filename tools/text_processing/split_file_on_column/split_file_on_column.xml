<tool id="tp_split_on_column" name="Split file" version="0.2">
    <description>according to the values of a column</description>
    <requirements>
        <requirement type="package" version="4.1.0">gnu_awk</requirement>
    </requirements>
    <command>
<![CDATA[
        mkdir tmp_out &&

        #if $condition_has_header.has_header =="y" and $condition_has_header.include_header =="n"
           awk -F '\t' 'NR==1{hdr=$0;next}f!="tmp_out/"\$$column".$infile.ext"{if(f) close(f); f="tmp_out/"\$$column".$infile.ext";print hdr>f} {print >> f}' $infile
        #else
           awk -F'\t' '{print > "tmp_out/"\$$column".$infile.ext" }' '$infile'
        #end if
]]>
    </command>
    <inputs>
        <param format="tabular" name="infile" type="data" label="File to select" />
        <param name="column" label="on column" type="data_column" data_ref="infile" accept_default="true" />
        <conditional name="condition_has_header">
            <param name="has_header" type="select" display="radio" label="Does the input file has header?">
                <option value="n">No</option>
                <option value="y">Yes</option>
            </param>
            <when value="y">
                <param name="include_header" type="select" display="radio" label="Include a header file in the output?" value="n">
                  <option value="n">No</option>
                  <option value="y">Yes</option>
                </param>
            </when>
        </conditional>
    </inputs>
    <outputs>
        <collection name="split_output" type="list" label="Table split on first column">
            <discover_datasets pattern="__name_and_ext__" directory="tmp_out" />
        </collection>
    </outputs>
    <tests>
        <test>
            <param name="infile" value="5cols.tabular" ftype="tabular"/>
            <param name="column" value="5" />
            <conditional name="condition_has_header">
               <param name="has_header" value="n" />
               <param name="include_header" value="n"/>
           </conditional>
            <output_collection name="split_output" type="list" count="2">
                <element name="1">
                    <assert_contents>
                        <has_text_matching expression="chr7\t56632\t56652\tcluster\t1" />
                    </assert_contents>
                </element>
                <element name="2">
                    <assert_contents>
                        <has_text_matching expression="chr7\t56761\t56781\tcluster\t2" />
                    </assert_contents>
                </element>
            </output_collection>
        </test>
        <test>
           <param name="infile" value="5cols.tabular" ftype="tabular" />
           <param name="column" value="5" />
           <conditional name="condition_has_header">
               <param name="has_header" value="y" />
               <param name="include_header" value="n"/>
           </conditional>
           <output_collection name="split_output" type="list" count="2">
                <element name="1">
                    <assert_contents>
                        <has_text_matching expression="chr7\t56632\t56652\tcluster\t1" />
                    </assert_contents>
                </element>
                <element name="2">
                    <assert_contents>
                        <has_text_matching expression="chr7\t56761\t56781\tcluster\t2" />
                    </assert_contents>
                </element>
           </output_collection>
        </test>
        <test>
           <param name="infile" value="5cols.tabular" ftype="tabular" />
           <param name="column" value="5" />
           <conditional name="condition_has_header">
               <param name="has_header" value="y" />
               <param name="include_header" value="y"/>
           </conditional>
           <output_collection name="split_output" type="list" count="3">
                <element name="1">
                    <assert_contents>
                        <has_text_matching expression="Column1\tColumn2\tColumn3\tColumn4\tColumn5" />
                    </assert_contents>
                </element>
                <element name="2">
                    <assert_contents>
                        <has_text_matching expression="chr7\t56632\t56652\tcluster\t1" />
                    </assert_contents>
                </element>
                <element name="3">
                    <assert_contents>
                        <has_text_matching expression="chr7\t56761\t56781\tcluster\t2" />
                    </assert_contents>
                </element>
           </output_collection>
        </test>

    </tests>
    <help>
<![CDATA[

**What it does**

This tool splits a file into different smaller files using a specific column.
It will work like the group tool, but every group is saved to its own file.

-----

**Example**

Splitting on column 5 from this::

    chr7  56632  56652  cluster 1
    chr7  56736  56756  cluster 1
    chr7  56761  56781  cluster 2
    chr7  56772  56792  cluster 2
    chr7  56775  56795  cluster 2

will produce 2 files with different clusters::

    chr7  56632  56652  cluster 1
    chr7  56736  56756  cluster 1


    chr7  56761  56781  cluster 2
    chr7  56772  56792  cluster 2
    chr7  56775  56795  cluster 2


]]>
    </help>
</tool>

