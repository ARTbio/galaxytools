<tool id="sklearn_train_test_split" name="Split Dataset" version="@VERSION@">
    <description>into training and test subsets</description>
    <macros>
        <import>main_macros.xml</import>
    </macros>
    <expand macro="python_requirements"/>
    <expand macro="macro_stdio"/>
    <version_command>echo "@VERSION@"</version_command>
    <command detect_errors="exit_code"><![CDATA[
        python '$__tool_directory__/train_test_split.py'
            --inputs '$inputs'
            --infile_array '$infile_array'
            #if $options.shuffle_selection.shuffle not in ['None', 'simple']
                --infile_labels '$options.shuffle_selection.labels'
            #end if
            --outfile_train '$out_train'
            --outfile_test '$out_test'
    ]]>
    </command>
    <configfiles>
        <inputs name="inputs"/>
    </configfiles>
    <inputs>
        <param name="infile_array" type="data" format="tabular" label="Select the dataset containing array to split"/>
        <param name="header0" type="boolean" optional="true" truevalue="booltrue" falsevalue="boolfalse" checked="true" label="Does the dataset contain header?" />
        <section name="options" title="Options" expanded="true">
            <param argument="test_size" type="float" min="0" optional="false" value="0.25" label="Test size:"
                help="A float number, 0.0 - 1.0, represents the proportion of the dataset to be included in the test split."/>
            <param argument="random_state" type="integer" optional="true" value="" label="Random seed number:"/>
            <conditional name="shuffle_selection">
                <param name="shuffle" type="select" label="Splitting strategy">
                    <option value="None">None - No shuffle</option>
                    <option value="simple">Shuffle Split</option>
                    <option value="stratified">Stratified Shuffle Split</option>
                    <option value="group">Group Shuffle Split</option>
                    <option value="ordered_target">Ordered Target Split -- Single split from `galaxy_ml.model_validations.OrderedKFold`</option>
                </param>
                <when value="None"/>
                <when value="simple"/>
                <when value="stratified">
                    <param name="labels" type="data" format="tabular" label="Select the dataset containing labels"/>
                    <param name="header1" type="boolean" optional="true" truevalue="booltrue" falsevalue="boolfalse" checked="true" label="Does the dataset contain header?" />
                    <param name="col" type="data_column" data_ref="labels" label="Select target column"/>
                </when>
                <when value="group">
                    <param name="labels" type="data" format="tabular" label="Select the dataset containing groups"/>
                    <param name="header1" type="boolean" optional="true" truevalue="booltrue" falsevalue="boolfalse" checked="true" label="Does the dataset contain header?" />
                    <param name="col" type="data_column" data_ref="labels" label="Select target column"/>
                </when>
                <when value="ordered_target">
                    <param name="labels" type="data" format="tabular" label="Select the dataset containing target values"/>
                    <param name="header1" type="boolean" optional="true" truevalue="booltrue" falsevalue="boolfalse" checked="true" label="Does the dataset contain header?" />
                    <param name="col" type="data_column" data_ref="labels" label="Select target column"/>
                </when>
            </conditional>
        </section>
    </inputs>
    <outputs>
        <data format="tabular" name="out_train" label="${tool.name} on ${on_string} (train)"/>
        <data format="tabular" name="out_test" label="${tool.name} on ${on_string} (test)"/>
    </outputs>
    <tests>
        <test>
            <param name="infile_array" value="regression_X.tabular" ftype="tabular"/>
            <param name="header0" value="true"/>
            <param name="random_state" value="123"/>
            <param name="shuffle" value="simple"/>
            <output name="out_train" file="train_test_split_train01.tabular" ftype="tabular"/>
            <output name="out_test" file="train_test_split_test01.tabular" ftype="tabular"/>
        </test>
        <test>
            <param name="infile_array" value="imblearn_X.tabular" ftype="tabular"/>
            <param name="header0" value="false"/>
            <param name="test_size" value="0.2"/>
            <param name="random_state" value="123"/>
            <param name="shuffle" value="stratified"/>
            <conditional name="shuffle_selection">
                <param name="labels" value="imblearn_y.tabular" ftype="tabular"/>
                <param name="header1" value="false"/>
                <param name="col" value="1"/>
            </conditional>
            <output name="out_train" file="train_test_split_train02.tabular" ftype="tabular"/>
            <output name="out_test" file="train_test_split_test02.tabular" ftype="tabular"/>
        </test>
        <test>
            <param name="infile_array" value="regression_X.tabular" ftype="tabular"/>
            <param name="header0" value="true"/>
            <param name="test_size" value="0.2"/>
            <param name="random_state" value="123"/>
            <param name="shuffle" value="ordered_target"/>
            <conditional name="shuffle_selection">
                <param name="labels" value="regression_y.tabular" ftype="tabular"/>
                <param name="header1" value="true"/>
                <param name="col" value="1"/>
            </conditional>
            <output name="out_train" file="train_test_split_train03.tabular" ftype="tabular"/>
            <output name="out_test" file="train_test_split_test03.tabular" ftype="tabular"/>
        </test>
    </tests>
    <help><![CDATA[
**What it does**
This tool implements `sklearn.model_selection.train_test_split` to split contents (rows) of a table dataset into two subsets for training and test, respectively . It not only supports shuffle split and stratified shuffle split natively carried by the function, but also gets extended to do group shuffle.

- train test split
    - direct split, no shuffle
    - shuffle split
    - stratified shuffle split
    - group shuffle split


Input: a tabular dataset.

Output: two tabular datasets containing training and test subsets, respectively.

    ]]></help>
    <expand macro="sklearn_citation"/>
</tool>