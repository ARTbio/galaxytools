<tool id="cp-measuretexture" name="MeasureTexture" version="19.05">
  <description>module of CellProfiler v3.1.9</description>
  <requirements>
     <requirement type="package" version="2.7.16">python</requirement>
  </requirements>
  <macros>
    <import>macros.xml</import>
    <xml name="measureImgObj">
      <repeat name="rpt_obj_to_measure" title="Add another object">
        <param name="obj_to_measure" label="Select objects to measure" type="text" />       
      </repeat>
    </xml>
  </macros>
  <configfiles>
    <inputs name="inputs" filename="input.json" />

 <configfile name="script_file">
import json
import sys
import os

FOURSPACES="    "
NEWLINE="\n"

input_json_path = sys.argv[1]
input_pipeline= sys.argv[2]

params = json.load(open(input_json_path, "r"))

def writemi():
  f.write(NEWLINE)

  f.write("MeasureTexture:[module_num:"+str(new_count)+"|svn_version:\\'Unknown\\'|variable_revision_number:5|show_window:False|notes:\\x5B\\'PARAMS\\x3A\\', \\'- Texture scale\'\x5D|batch_state:array(\\x5B\\x5D, dtype=uint8)|enabled:True|wants_pause:False]"+NEWLINE)  

  img_count = str(len(params['rpt_image_to_measure']))
  obj_count = str(len(params['con_img_obj']['rpt_obj_to_measure']))
  scale_count = str(len(params['rpt_scale_to_measure']))

  img_obj = params['con_img_obj']['img_obj']

  f.write(FOURSPACES + "Hidden:" + img_count + NEWLINE)
  f.write(FOURSPACES + "Hidden:" + obj_count + NEWLINE)
  f.write(FOURSPACES + "Hidden:" + scale_count + NEWLINE)

  for img in params['rpt_image_to_measure']:
    f.write(FOURSPACES + "Select an image to measure:" + img['image_to_measure']+ NEWLINE)

  if img_obj =="Images"  :
    f.write(FOURSPACES + "Select objects to measure:None"+ NEWLINE)
  else:
    for obj in params['con_img_obj']['rpt_obj_to_measure']:
      f.write(FOURSPACES + "Select objects to measure:" + obj['obj_to_measure']+ NEWLINE)

  for scale in params['rpt_scale_to_measure']:
    f.write(FOURSPACES+ "Texture scale to measure:" + scale['scale_to_measure']+ NEWLINE)

  f.write(FOURSPACES + "Measure images or objects?:" + params['con_img_obj']['img_obj']+ NEWLINE)


with open(input_pipeline) as fin:
  lines = fin.readlines()
  
  k,v= lines[4].strip().split(':')

  module_count = int(v)
  new_count = module_count+1
  lines[4]= k+":"+str(new_count)+"\n"
  
  with open("output","w") as f:
    f.writelines(lines)
    writemi()

f.close() 
 </configfile>    
</configfiles>
  <command><![CDATA[
    python $script_file $inputs $input_pipeline
  ]]></command>
  <inputs>

      <expand macro="input_pipeline_macro" />
      <repeat name="rpt_image_to_measure" title="Add another image">
        <param name="image_to_measure" label="Select an image to measure" type="text" />
      </repeat>

      <conditional name="con_img_obj">
        <param name="img_obj" label="Measure images or objects?" type="select">
          <option value="Images">Images</option>
          <option value="Objects">Objects</option>
          <option value="Both">Both</option>
        </param>

        <when value="Objects">
          <expand macro="measureImgObj" />
        </when>

        <when value="Both">
          <expand macro="measureImgObj" />
        </when>

      </conditional>

      <repeat name="rpt_scale_to_measure" title="Add another scale">
        <param name="scale_to_measure" label="Texture scale to measure" type="text" />      
    </repeat>
  </inputs>

  <outputs>
      <expand macro="output_pipeline_macro" />
  </outputs>

  <stdio>
    <exit_code range="1:" level="fatal" description="Error occured"/>
  </stdio>
  <tests>

  </tests>
  <help>
    This tool append the MeasureTexture module section to an existing pipeline file (.cppipe).

    Input: existing pipeline file

    Output: new pipeline file

    Combine this tool with "Common" and "CellProfiler" together to run the module alone.
  </help>
</tool>

