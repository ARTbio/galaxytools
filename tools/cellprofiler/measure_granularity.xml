<tool id="cp-measuregranularity" name="MeasureGranularity" version="19.05">
  <description>module of CellProfiler v3.1.9</description>
  <requirements>
     <requirement type="package" version="2.7.16">python</requirement>
  </requirements>
 <macros>
    <import>macros.xml</import>
 </macros>
  <configfiles>
    <inputs name="inputs" filename="input.json" />
 <configfile name="script_file">
import json
import sys
import os

FOURSPACES="    "
NEWLINE="\n"

input_json_path = sys.argv[1]
input_pipeline= sys.argv[2]

params = json.load(open(input_json_path, "r"))

def writemg():
  f.write(NEWLINE)

  f.write("MeasureGranularity:[module_num:"+str(new_count)+"|svn_version:\\'Unknown\\'|variable_revision_number:3|show_window:False|notes:\\x5B\\'PARAMS\\x3A\\', \\'- Radius\\', \'- Range\\'\\x5D|batch_state:array(\\x5B\\x5D, dtype=uint8)|enabled:True|wants_pause:False]"+NEWLINE)  


  image_count = str(len(params['rpt_image']))

  f.write(FOURSPACES+"Image count:"+image_count+NEWLINE)

  for img in params['rpt_image']:
    obj_count = str(len(img['rpt_object']))

    f.write(FOURSPACES+"Object count:"+obj_count+NEWLINE)

    f.write(FOURSPACES+"Select an image to measure:"+ img['image_to_measure']+NEWLINE)

    f.write(FOURSPACES+"Subsampling factor for granularity measurements:"+img['subsampling_factor_granularity']+NEWLINE)

    f.write(FOURSPACES+"Subsampling factor for background reduction:"+ img['subsampling_factor_background_reduction']+NEWLINE)

    f.write(FOURSPACES+"Radius of structuring element:"+ img['radius']+NEWLINE)
    f.write(FOURSPACES+"Range of the granular spectrum:"+ img['range_granular_spectrum']+NEWLINE)

    for obj in img['rpt_object']:
      f.write(FOURSPACES+"Select objects to meausre:" + obj['object_to_measure']+NEWLINE)

with open(input_pipeline) as fin:
  lines = fin.readlines()
  
  k,v= lines[4].strip().split(':')

  module_count = int(v)
  new_count = module_count+1
  lines[4]= k+":"+str(new_count)+"\n"
  with open("output","w") as f:
    f.writelines(lines)
    writemg()

f.close() 
 </configfile>    
</configfiles>
  <command><![CDATA[
    python $script_file $inputs $input_pipeline
  ]]></command>
  <inputs>
    <expand macro="input_pipeline_macro" />
    <repeat name="rpt_image" title="Add another image">
        <param name="image_to_measure" type="text" label="Select an image to measure" />

        <param name="subsampling_factor_granularity" type="text" label="Subsampling factor for granularity measurements" /> 

        <param name="subsampling_factor_background_reduction" type="text" label="Subsampling factor for background reduction" /> 
        
        <param name="radius" type="text" label="Radius of structuring element" /> 
        
        <param name="range_granular_spectrum" type="text" label="Range of the granular spectrum" /> 

        <repeat name="rpt_object" title="Add another object">
          <param name="object_to_measure" type="text" label="Select object to measure" />
        </repeat>        
    </repeat>



  </inputs>

  <outputs>
      <expand macro="output_pipeline_macro" />
  </outputs>

  <stdio>
  	<exit_code range="1:" level="fatal" description="Error occured"/>
  </stdio>
  <tests>

  </tests>
  <help>
    This tool append the MeasureGranularity module section to an existing pipeline file (.cppipe).

    Input: existing pipeline file

    Output: new pipeline file

    Combine this tool with "Common" and "CellProfiler" together to run the module alone.
  </help>
</tool>

