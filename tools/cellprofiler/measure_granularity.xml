<tool id="cp_measure_granularity" name="MeasureGranularity" version="@CP_VERSION@">
    <description>module of CellProfiler</description>

    <macros>
        <import>macros.xml</import>
    </macros>
    
    <expand macro="requirements" version="@PY_VERSION@" package="python" />
    <expand macro="stdio" />
    <expand macro="cmd_modules" />
    
    <configfiles>
        <inputs name="inputs" />
        <configfile name="script_file">
import json
import sys
import os

FOURSPACES=@SPACES@
NEWLINE=@NEWLINE@

input_json_path = sys.argv[1]
input_pipeline= sys.argv[2]

params = json.load(open(input_json_path, "r"))

def writemg():
  f.write(NEWLINE)

  f.write("MeasureGranularity:[module_num:"+str(new_count)+"|svn_version:\\'Unknown\\'|variable_revision_number:3|show_window:False|notes:\\x5B\\'PARAMS\\x3A\\', \\'- Radius\\', \'- Range\\'\\x5D|batch_state:array(\\x5B\\x5D, dtype=uint8)|enabled:True|wants_pause:False]"+NEWLINE)  


  image_count = str(len(params['rpt_image']))

  f.write(FOURSPACES+"Image count:"+image_count+NEWLINE)

  for img in params['rpt_image']:
    obj_count = str(len(img['rpt_object']))

    f.write(FOURSPACES+"Object count:"+obj_count+NEWLINE)

    f.write(FOURSPACES+"Select an image to measure:"+ img['image_to_measure']+NEWLINE)

    f.write(FOURSPACES+"Subsampling factor for granularity measurements:"+str(img['subsampling_factor_granularity'])+NEWLINE)

    f.write(FOURSPACES+"Subsampling factor for background reduction:"+ str(img['subsampling_factor_background_reduction'])+NEWLINE)

    f.write(FOURSPACES+"Radius of structuring element:"+ str(img['radius'])+NEWLINE)
    f.write(FOURSPACES+"Range of the granular spectrum:"+ str(img['range_granular_spectrum'])+NEWLINE)

    for obj in img['rpt_object']:
      f.write(FOURSPACES+"Select objects to meausre:" + obj['object_to_measure']+NEWLINE)

with open(input_pipeline) as fin:
  lines = fin.readlines()
  
  k,v= lines[4].strip().split(':')

  module_count = int(v)
  new_count = module_count+1
  lines[4]= k+":"+str(new_count)+"\n"
  with open("output","w") as f:
    f.writelines(lines)
    writemg()

f.close() 
        </configfile>
    </configfiles>
    
    <inputs>
        <expand macro="input_pipeline_macro" />
        <repeat name="rpt_image" title="Add another image">
            <param name="image_to_measure" type="text" label="Select an image to measure">
                <expand macro="text_validator" />
            </param>

            <param name="subsampling_factor_granularity" type="float" label="Subsampling factor for granularity measurements" value="0.25"/> 

            <param name="subsampling_factor_background_reduction" type="float" label="Subsampling factor for background reduction" value="0.25" min="0.125" max="0.25"/> 
            
            <param name="radius" type="integer" label="Radius of structuring element" value="10" /> 
            
            <param name="range_granular_spectrum" type="integer" value="16" label="Range of the granular spectrum" /> 

            <repeat name="rpt_object" title="Add another object">
                <param name="object_to_measure" type="text" label="Select object to measure" >
                    <expand macro="text_validator" />
                </param>
            </repeat>
        </repeat>
    </inputs>

    <outputs>
        <expand macro="output_pipeline_macro" />
    </outputs>

    <tests>
        <test>
            <expand macro="test_input_pipeline_param" />
            <repeat name="rpt_image">
                <param name="image_to_measure" value="DNA" />
                <param name="subsampling_factor_granularity" value="0.25" />
                <param name="subsampling_factor_background_reduction" value="0.25" />
                <param name="radius" value="10" />
                <param name="range_granular_spectrum" value="16" />
            </repeat>
            <expand macro="test_out_file" file="measure_granularity.txt" />
        </test>
    </tests>

    <expand macro="help" module="MeasureGranularity" />
    <expand macro="citations" />
</tool>

