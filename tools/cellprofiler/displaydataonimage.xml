<tool id="cp-displaydataonimage" name="DisplayDataOnImage" version="19.05">
  <description>module of CellProfiler v3.1.9</description>
  <requirements>
     <requirement type="package" version="2.7.16">python</requirement>
  </requirements>
  <macros>
    <import>macros.xml</import>
    <xml name="display_object">
      <param name="select_input_obj" label="Select the input objects" type="text" />
        <conditional name="con_obj_measurement_category">
          <param name="measurement_category" label="Measurement category" type="select">
            <option value="Location">Location</option>
            <option value="Number">Number</option>
          </param>
          <when value="Number">
            <param name="measurement" label="Measurement" type="select">
              <option value="Object_Number">Object_Number</option>
            </param>
          </when>
          <when value="Location">
            <param name="obj_measurement" label="Measurement" type="select">
              <option value="Center_X">Center_X</option>
              <option value="Center_Y">Center_Y</option>
              <option value="Center_Z">Center_Z</option>
            </param>
          </when>
        </conditional>
    </xml>

    <xml name="display_image">
       <conditional name="con_obj_measurement_category">
          <param name="measurement_category" label="Measurement category" type="select">
            <option value="Count">Count</option>
            <option value="FileName">FileName</option>
            <option value="Frame">Frame</option>
            <option value="Height">Height</option>
            <option value="MD5Digest">MD5Digest</option>
            <option value="Metadata">Metadata</option>
            <option value="PathName">PathName</option>
            <option value="Scaling">Scaling</option>
            <option value="Series">Series</option>
            <option value="PathName">PathName</option>
            <option value="Threshold">Threshold</option>
            <option value="URL">URL</option>
            <option value="Width">Width</option>
          </param>
          <when value="Count">
            <param name="measurement" label="Measurement" type="text" />
          </when>
          <when value="FileName">
            <param name="measurement" label="Measurement" type="text" />
          </when>
          <when value="Frame">
            <param name="measurement" label="Measurement" type="text" />
          </when>
          <when value="Height">
            <param name="measurement" label="Measurement" type="text" />
          </when>
          <when value="MD5Digest">
            <param name="measurement" label="Measurement" type="text" />
          </when>
          <when value="Metadata">
            <param name="measurement" label="Measurement" type="select">
            <option value="FileLocation">FileLocation</option>
            <option value="Frame">Frame</option>
            <option value="ImageId">ImageId</option>
            <option value="Screen">Screen</option>
            <option value="Series">Series</option>
          </param>
          </when>                                        
          <when value="PathName">
            <param name="measurement" label="Measurement" type="text" />
          </when>
          <when value="Scaling">
            <param name="measurement" label="Measurement" type="text" />
          </when>
          <when value="Series">
            <param name="measurement" label="Measurement" type="text" />
          </when>
          <when value="PathName">
            <param name="measurement" label="Measurement" type="text" />
          </when>
          <when value="Threshold">
              <param name="measurement" label="Measurement" type="text" />
              <param name="image_thresh_objects" label="Objects" type="text"/>
          </when>
          <when value="URL">
            <param name="measurement" label="Measurement" type="text" />
          </when>
          <when value="Width">
            <param name="measurement" label="Measurement" type="text" />
          </when>          
        </conditional>
    </xml>

  </macros>
  <configfiles>
    <inputs name="inputs" filename="input.json" />
 <configfile name="script_file">
import json
import sys
import os

FOURSPACES="    "
NEWLINE="\n"

input_json_path = sys.argv[1]
input_pipeline= sys.argv[2]

params = json.load(open(input_json_path, "r"))

def writemi():
  f.write(NEWLINE)

  f.write("DisplayDataOnImage:[module_num:"+str(new_count)+"|svn_version:\\'Unknown\\'|variable_revision_number:6|show_window:False|notes:\\x5B\\'Add nuclei id as label\\'\\x5D|batch_state:array(\\x5B\\x5D, dtype=uint8)|enabled:True|wants_pause:False]"+NEWLINE)  


  obj_img_params = params['con_display_obj_image']
  display_mode_params = params['con_display_mode']

  f.write(FOURSPACES + "Display object or image measurements?:" + obj_img_params['display_obj_image'] + NEWLINE)

  input_obj = obj_img_params['select_input_obj'] if obj_img_params['display_obj_image']=="Object" else "None"

  f.write(FOURSPACES + "Select the input objects:" + input_obj + NEWLINE)

  f.write(FOURSPACES + "Measurement to display:" + obj_img_params['con_obj_measurement_category']['measurement_category']+"_"+obj_img_params['con_obj_measurement_category']['measurement'] + NEWLINE)

  f.write(FOURSPACES + "Select the image on which to display the measurements:" + params['image_to_display_measurements'] + NEWLINE)

  display_mode = display_mode_params['display_mode']

  if display_mode == "Text":
      text_color = display_mode_params['text_color']
      font_size = display_mode_params['font_size']
      no_of_decimals = display_mode_params['number_of_decimals']
      annotation_offset = display_mode_params['annotation_offset']
      color_map= "Default"
      color_map_scale = "Use this image's measurement range"
      color_map_range = "0.0,1.0"
  else:
      text_color = "#ff0000"
      font_size = "11"
      no_of_decimals = "0"
      annotation_offset = "0"
      color_map = display_mode_params['color_map']
      color_map_scale = display_mode_params['con_color_map_scale']['color_map_scale']
      if color_map_scale == "Manual":
        color_map_range = display_mode_params['con_color_map_scale']['min_color_map_range']+","+display_mode_params['con_color_map_scale']['max_color_map_range']
      else:
        color_map_range = "0.0,1.0"

  f.write(FOURSPACES + "Text color:" + text_color + NEWLINE)

  f.write(FOURSPACES + "Name the output image that has the measurements displayed:" + params['name_output_image'] + NEWLINE)

  f.write(FOURSPACES + "Font size (points):" + font_size + NEWLINE)
  f.write(FOURSPACES + "Number of decimals:" + no_of_decimals + NEWLINE)
  f.write(FOURSPACES + "Image elements to save:" + params['element_to_save'] + NEWLINE)
  f.write(FOURSPACES + "Annotation offset (in pixels):" + annotation_offset + NEWLINE)
  f.write(FOURSPACES + "Display mode:" + display_mode + NEWLINE)
  f.write(FOURSPACES + "Color map:" + color_map + NEWLINE)
  f.write(FOURSPACES + "Display background image?:" + params['display_background_image'] + NEWLINE)
  f.write(FOURSPACES + "Color map scale:" + color_map_scale + NEWLINE)
  f.write(FOURSPACES + "Color map range:" + color_map_range + NEWLINE)
  

with open(input_pipeline) as fin:
  lines = fin.readlines()
  
  k,v= lines[4].strip().split(':')

  module_count = int(v)
  new_count = module_count+1
  lines[4]= k+":"+str(new_count)+"\n"
  
  with open("output","w") as f:
    f.writelines(lines)
    writemi()

f.close() 
 </configfile>    
</configfiles>
  <command><![CDATA[
    python $script_file $inputs $input_pipeline
  ]]></command>
  <inputs>

    <expand macro="input_pipeline_macro" />
    <conditional name="con_display_obj_image">
      <param name="display_obj_image" type="select" label="Display object or image measurements?">
        <option value="Object">Object</option>
        <option value="Image">Image</option>
      </param>
      <when value="Object">
        <expand macro="display_object" />
      </when>
      <when value="Image">
        <expand macro="display_image" />
      </when>
    </conditional>

    <param name="display_background_image" label="Display background image?" type="select" display="radio">
      <option value="Yes">Yes</option>
      <option value="No">No</option>
    </param>

    <param name="image_to_display_measurements" label="Select the image on which to display the measurements" type="text"/>

    <conditional name="con_display_mode">
      <param name="display_mode" type="select" label="Display mode">
        <option value="Text">Text</option>
        <option value="Color">Color</option>
      </param>
      <when value="Text">
        <param name="text_color" type="color" label="Text color" />
        <param name="font_size" type="text" label="Font size(points)" />
        <param name="number_of_decimals" type="text" label="Number of decimals" />
        <param name="annotation_offset" type="text" label="Annotation offset (in pixels)" />
      </when>

      <when value="Color">
        <param name="color_map" label="Color map" type="select">
          <option value="Default">Default</option>
        </param>
        <conditional name="con_color_map_scale">
            <param name="color_map_scale" label="Color map scale" type="select">
              <option value="Use this image's measurement range">Use this image's measurement range</option>
              <option value="Manual">Manual</option>
               <sanitizer sanitize="false"/>
            </param>        
            <when value="Manual">
              <param name="min_color_map_range" label="Min. color map range" type="text" />
              <param name="max_color_map_range" label="Max. color map range" type="text" />
            </when>
        </conditional>
      </when>
    </conditional>
    <param name="name_output_image" label="Name the output image that has the measurements displayed" type="text" />
    <param name="element_to_save" type="select" label="Image elements to save">
        <option value="Image">Image</option>
        <option value="Figure">Figure</option>
        <option value="Axes">Axes</option>
    </param>
  </inputs>

  <outputs>
    <expand macro="output_pipeline_macro" />
  </outputs>

  <stdio>
    <exit_code range="1:" level="fatal" description="Error occured"/>
  </stdio>
  <tests>

  </tests>
  <help>
    This tool append the DisplayDataOnImage module section to an existing pipeline file (.cppipe).

    Input: existing pipeline file

    Output: new pipeline file

    Combine this tool with "Common" and "CellProfiler" together to run the module alone.
  </help>
</tool>

