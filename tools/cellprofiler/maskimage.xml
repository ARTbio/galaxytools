<tool id="cp-maskimage" name="MaskImage" version="19.05">
  <description>module of CellProfiler v3.1.9</description>
  <requirements>
     <requirement type="package" version="2.7.16">python</requirement>
  </requirements>
  <macros>
	<import>macros.xml</import>
  </macros>
  <configfiles>
    <inputs name="inputs" filename="input.json" />
 <configfile name="script_file">
import json
import sys
import os

FOURSPACES="    "
NEWLINE="\n"

input_json_path = sys.argv[1]
input_pipeline= sys.argv[2]

params = json.load(open(input_json_path, "r"))

def writemi():
  f.write(NEWLINE)

  f.write("MaskImage:[module_num:"+str(new_count)+"|svn_version:\\'Unknown\\'|variable_revision_number:3|show_window:False|notes:\\x5B\'Keep only nucleoli inside the nuclei\\'\\x5D|batch_state:array(\\x5B\\x5D, dtype=uint8)|enabled:True|wants_pause:False]"+NEWLINE)  

  f.write(FOURSPACES+"Select the input image:"+params['input_image']+NEWLINE)
  f.write(FOURSPACES+"Name the output image:"+params['name_output_image']+NEWLINE)

  img_obj = params['con_img_obj']['img_obj']
  f.write(FOURSPACES+"Use objects or an image as a mask?:"+params['con_img_obj']['img_obj']+NEWLINE)
  
  if img_obj == "Objects":
    f.write(FOURSPACES+"Select object for mask:"+params['con_img_obj']['select_obj']+NEWLINE)
    f.write(FOURSPACES+"Select image for mask:None"+NEWLINE)
  else:
    f.write(FOURSPACES+"Select object for mask:None"+NEWLINE)
    f.write(FOURSPACES+"Select image for mask:"+params['con_img_obj']['select_img']+NEWLINE)


  f.write(FOURSPACES+"Invert the mask?:"+params['invert_mask']+NEWLINE)


with open(input_pipeline) as fin:
  lines = fin.readlines()
  
  k,v= lines[4].strip().split(':')

  module_count = int(v)
  new_count = module_count+1
  lines[4]= k+":"+str(new_count)+"\n"
  
  with open("output","w") as f:
    f.writelines(lines)
    writemi()

f.close() 
 </configfile>    
</configfiles>
  <command><![CDATA[
    python $script_file $inputs $input_pipeline
  ]]></command>
  <inputs>

      <expand macro="input_pipeline_macro" />
      <param name="input_image" label="Select input image" type="text" />

      <param name="name_output_image" type="text" label="Name the output image" />

      <conditional name="con_img_obj">
        <param name="img_obj" label="Use objects or an image as a mask?" type="select">
          <option value="Objects">Objects</option>
          <option value="Image">Image</option>
        </param>

        <when value="Objects">
          <param name="select_obj" label="Select object for mask" type="text"/>
        </when>

        <when value="Image">
          <param name="select_img" label="Select image for mask" type="text"/>
        </when>
        
      </conditional>

      <param name="invert_mask" label="Invert the mask?" type="select" display="radio">
        <option value="Yes">Yes</option>
        <option value="No">No</option>
      </param>
  </inputs>

  <outputs>
       <expand macro="output_pipeline_macro" />
  </outputs>

  <stdio>
  	<exit_code range="1:" level="fatal" description="Error occured"/>
  </stdio>
  <tests>

  </tests>
  <help>
    This tool append the MaskImage module section to an existing pipeline file (.cppipe).

    Input: existing pipeline file

    Output: new pipeline file

    Combine this tool with "Common" and "CellProfiler" together to run the module alone.
  </help>
</tool>

