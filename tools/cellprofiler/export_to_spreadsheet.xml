<tool id="cp_export_to_spreadsheet" name="ExportToSpreadsheet" version="@CP_VERSION@">
    <description>module of CellProfiler</description>

    <macros>
        <import>macros.xml</import>
    </macros>

    <expand macro="requirements" version="@PY_VERSION@" package="python" />
    <expand macro="stdio" />
    <expand macro="cmd_modules" />

    <configfiles>
        <inputs name="inputs" filename="input.json" />
        <configfile name="script_file">
import json
import sys
import os

FOURSPACES=@SPACES@
NEWLINE=@NEWLINE@

input_json_path = sys.argv[1]
input_pipeline= sys.argv[2]

params = json.load(open(input_json_path, "r"))


def write_etss():
  f.write(NEWLINE)

  f.write("ExportToSpreadsheet:[module_num:"+str(new_count)+"|svn_version:\\'Unknown\\'|variable_revision_number:12|show_window:True|notes:\\x5B\\x5D|batch_state:array(\\x5B\\x5D, dtype=uint8)|enabled:True|wants_pause:False]"+NEWLINE)

  f.write(FOURSPACES+"Select the column delimiter:"+params["delimiter"]+NEWLINE)
  f.write(FOURSPACES+"Add image metadata columns to your object data file?:"+params["add_metadata_column_to_object"]+NEWLINE)

  measurement = params["con_measurement_export"]
  f.write(FOURSPACES+"Select the measurements to export:"+measurement['export_measurement']+NEWLINE)

  f.write(FOURSPACES+"Calculate the per-image mean values for object measurements?:"+params['calc_mean']+NEWLINE)
  f.write(FOURSPACES+"Calculate the per-image median values for object measurements?:"+params['calc_median']+NEWLINE)
  f.write(FOURSPACES+"Calculate the per-image standard deviation values for object measurements?:"+params['calc_standard_deviation']+NEWLINE)

  f.write(FOURSPACES+"Output file location:"+params['output_file_location']+"\\x7C"+NEWLINE)

  create_gene = params["con_create_gene_pattern"]["create_gene_pattern"]
  if create_gene == "No":
    f.write(FOURSPACES+"Create a GenePattern GCT file?:"+create_gene+NEWLINE)
    f.write(FOURSPACES+"Select source of sample row name:Metadata"+NEWLINE)
    f.write(FOURSPACES+"Select the image to use as the identifier:None"+NEWLINE)
    f.write(FOURSPACES+"Select the metadata to use as the identifier:None"+NEWLINE)
  else:
    f.write(FOURSPACES+"Create a GenePattern GCT file?:"+create_gene+NEWLINE)
    f.write(FOURSPACES+"Select the image to use as the identifier:None"+NEWLINE)
    f.write(FOURSPACES+"Select the metadata to use as the identifier:None"+NEWLINE)

  export_all_measurements = params["con_export_all_measurements"]["export_all_measurements"]
  
  if export_all_measurements == "Yes":
    f.write(FOURSPACES+"Export all measurement types?:"+export_all_measurements+NEWLINE)

  if 'select_measurements' in params['con_measurement_export']:
    f.write(FOURSPACES+"Press button to select measurements:"+ params['con_measurement_export']['select_measurements']+NEWLINE)
  else:
    f.write(FOURSPACES+"Press button to select measurements:"+NEWLINE)


  f.write(FOURSPACES+"Representation of Nan/Inf:"+params["represent_nan"]+NEWLINE)
  f.write(FOURSPACES+"Add a prefix to file names?:"+params["con_prefix"]["add_prefix"]+NEWLINE)

  if "filename_prefix" in params["con_prefix"]:
    f.write(FOURSPACES+"Filename prefix:"+params["con_prefix"]["filename_prefix"]+NEWLINE)
  else:
    f.write(FOURSPACES+"Filename prefix:MyPrefix_"+NEWLINE)

  f.write(FOURSPACES+"Overwrite existing files without warning?:"+params["overwrite_existing_file"]+NEWLINE)

  if export_all_measurements == "Yes":
     f.write(FOURSPACES+"Data to export:Do not use"+NEWLINE)
     f.write(FOURSPACES+"Combine these object measurements with those of the previous object?:No"+NEWLINE)
     f.write(FOURSPACES+"File name:DATA.csv"+NEWLINE)
     f.write(FOURSPACES+"Use the object name for the file name?:Yes"+NEWLINE)
  else:
     f.write(FOURSPACES+"Data to export:"+params["con_export_all_measurements"]["data_to_export"]+NEWLINE)


with open(input_pipeline) as fin:
  lines = fin.readlines()
  
  k,v= lines[4].strip().split(':')

  module_count = int(v)
  new_count = module_count+1
  lines[4]= k+":"+str(new_count)+"\n"
  with open("output","w") as f:
    f.writelines(lines)
    write_etss()

f.close() 
        </configfile>
    </configfiles>

    <inputs>
        <expand macro="input_pipeline_macro" />
        <param name="delimiter" type="select" label="Select the column delimiter">
            <option value="Comma (&quot;,&quot;)">Comma (",")</option>
            <option value="Tab">Tab</option>
            <sanitizer sanitize="false"/>
        </param>
        <param name="output_file_location" type="select" label="Output file location">
            <option value="Default Output Folder"/>
        </param>
        <conditional name="con_prefix">
            <param name="add_prefix" type="select" display="radio" label="Add a prefix to file names?">
                <option value="Yes">Yes</option>
                <option value="No">No</option>
            </param>
            <when value="Yes">
                <param name="filename_prefix" type="text" label="Filename prefix"/>
            </when>
            <when value="No" />
        </conditional>
        <param name="overwrite_existing_file" display="radio" type="select" label="Overwrite existing files without warning?">
            <option value="Yes">Yes</option>
            <option value="No">No</option>
        </param>
        <param name="add_metadata_column_to_object" display="radio" type="select" label="Add image metadata columns to  your object data file?">
            <option value="Yes">Yes</option>
            <option value="No">No</option>
        </param>       
        <param name="represent_nan" type="select" label="Representation of Nan/Inf">
            <option value="NaN">NaN</option>
            <option value="Null">Null</option>
        </param>
        <conditional name="con_measurement_export">
            <param name="export_measurement" type="select" display="radio" label="Select the measurements to export">
                <option value="Yes">Yes</option>
                <option value="No">No</option>
            </param>
            <when value="Yes">
                <param name="select_measurement" type="text" label="Select measurements"/>
            </when>
            <when value="No" />
        </conditional>
        <param name="calc_mean" type="select" display="radio" label="Calculate the per-image mean values for object measurments">
            <option value="Yes">Yes</option>
            <option value="No">No</option>
        </param>
        <param name="calc_median" type="select" display="radio" label="Calculate the per-image median values for object measurments">
            <option value="Yes">Yes</option>
            <option value="No">No</option>
        </param>  
        <param name="calc_standard_deviation" type="select" display="radio" label="Calculate the per-image standard deviation values for object measurments">
            <option value="Yes">Yes</option>
            <option value="No">No</option>
        </param>
        <conditional name="con_create_gene_pattern">
            <param name="create_gene_pattern" type="select" display="radio" label="Create a GenePattern GCT file?">
                <option value="Yes">Yes</option>
                <option value="No">No</option>
            </param>
            <when value="Yes">
                <conditional name="con_source_sample_row">
                    <param name="select_source_sample_row_name" type="select" label="Select source of sample row name">
                        <option value="Metadata">Metadata</option>
                        <option value="Image filename">Image filename</option>
                    </param>
                    <when value="Metadata">
                        <param name="metadata_cat" type="select" label="Select the metadata to use as the indentifier">
                            <option value="AreaOccupied">AreaOccupied</option>
                        </param>
                    </when>
                    <when value="Image filename">
                        <param name="image_filename_cat" type="select" label="Select the image to use as the indentifier">
                            <option value="None">None</option>
                        </param>
                    </when>
                </conditional>
            </when>
            <when value="No" />
        </conditional>
        <conditional name="con_export_all_measurements">
            <param name="export_all_measurements" type="select" display="radio" label="Export all measuremnt types?">
                <option value="Yes">Yes</option>
                <option value="No">No</option>
            </param>
            <when value="No">
                <repeat name="r_data_to_export" title="Add another data set">
                    <param name="data_to_export" type="select" label="Data to export">
                        <option value="Image">Image</option>
                        <option value="Experiment">Experiement</option>
                        <option value="Object relationship">Object relationship</option>
                    </param>
                    <param name="use_as_filename" type="select" display="radio" label="Use the object name for the file name?">
                        <option value="Yes">Yes</option>
                        <option value="No">No</option>
                    </param>
                </repeat>
            </when>   
            <when value="Yes" />
        </conditional>
    </inputs>

    <outputs>
        <expand macro="output_pipeline_macro" />
    </outputs>

    <tests>
        <test>
            <expand macro="test_input_pipeline_param" />
            <param name="delimiter" value="Tab" />
            <param name="output_file_location" value="Default Output Folder" />
            <conditional name="con_prefix">
                <param name="add_prefix" value="No"/>
            </conditional>
            <param name="overwrite_existing_file" value="Yes" />
            <param name="add_metadata_column_to_object" value="Yes" />
            <param name="represent_nan" value="NaN" />
            <conditional name="con_measurement_export">
                <param name="export_measurement" value="No" />
            </conditional>
            <param name="calc_mean" value="Yes" />
            <param name="calc_median" value="Yes" />
            <param name="calc_standard_deviation" value="Yes" />
            <conditional name="con_create_gene_pattern">
                <param name="create_gene_pattern" value="No" />
            </conditional>
            <conditional name="con_export_all_measurements" >
                <param name="export_all_measurements" value="Yes" />
            </conditional>
            <expand macro="test_out_file" file="export_to_spreadsheet.txt" />
        </test>
    </tests>

    <expand macro="help" module="ExportToSpreadsheet" />
    <expand macro="citations" />

</tool>

