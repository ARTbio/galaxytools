<tool id="create_tool_recommendation_model" name="Create a model to recommend tools" version="0.0.1">
    <description>using deep learning</description>
    <requirements>
        <requirement type="package" version="3.6">python</requirement>
        <requirement type="package" version="1.14.0">tensorflow</requirement>
        <requirement type="package" version="2.2.4">keras</requirement>
        <requirement type="package" version="0.20.1">scikit-learn</requirement>
        <requirement type="package" version="2.9.0">h5py</requirement>
        <requirement type="package" version="1.0">csvkit</requirement>
        <requirement type="package" version="0.1.2">hyperopt</requirement>
    </requirements>
    <version_command>echo "@VERSION@"</version_command>
    <command detect_errors="aggressive">
<![CDATA[
        python '$__tool_directory__/main.py'
            --workflow_file '$input_tabular_workflows'
            --tool_usage_file '$input_tabular_tool_usage'
            --cutoff_date '$data_parameters.input_cutoff_date'
            --maximum_path_length '$data_parameters.input_maximum_path_length'
            --n_epochs '$training_parameters.n_epochs'
            --optimize_n_epochs '$training_parameters.optimize_n_epochs'
            --max_evals '$training_parameters.max_evals'
            --test_share '$training_parameters.test_share'
            --validation_share '$training_parameters.validation_share'
            --batch_size '$nn_parameters.batch_size'
            --units '$nn_parameters.units'
            --embedding_size '$nn_parameters.embedding_size'
            --dropout '$nn_parameters.dropout'
            --spatial_dropout '$nn_parameters.spatial_dropout'
            --recurrent_dropout '$nn_parameters.recurrent_dropout'
            --learning_rate '$nn_parameters.learning_rate'
            --activation_recurrent '$nn_parameters.activation_recurrent'
            --activation_output '$nn_parameters.activation_output'
            --loss_type '$nn_parameters.loss_type'
            --output_model '$outfile_model'
]]>
    </command>
    <inputs>
        <param name="input_tabular_workflows" type="data" format="tabular" label="Dataset containing workflows" help="Please provide Galaxy workflows as a tabular file."/>
        
        <param name="input_tabular_tool_usage" type="data" format="tabular" label="Dataset containing usage frequencies of tools" help="Please provide tools usage frequencies as a tabular file."/>
        
        <section name="data_parameters" title="Data parameters" expanded="False">
            <param name="input_cutoff_date" type="text" value="2017-12-01" label="Cutoff date" help="Provide a date (in the past) in yyyy-mm-dd format. The earliest date from which usage of tools will be extracted. For example, 2017-12-01 specifies that the usage of tools from this date until the data extraction date is extracted. The usage of tools before this date is not considered."/>
            
            <param name="input_maximum_path_length" type="integer" value="25" label="Maximum number of tools in a tool sequence" help="Provide an integer between 1 and 25. A workflow is divided into unique paths and this number specifies the maximum number of tools a path can have. Paths longer than this number are ignored and are not included in the deep learning training."/>
            
        </section>
        <section name="training_parameters" title="Training parameters" expanded="False">
        
            <param name="max_evals" type="integer" value="2" label="Maximum number of evaluations of different configurations of parameters" help="Provide an integer. Different combinations of parameters are sampled and optimized to find the best one. This number specifies the number of different configurations sampled and tested."/>
            
            <param name="optimize_n_epochs" type="integer" value="2" label="Number of training iterations to optimize the neural network parameters" help="Provide an integer. This number specifies the number of training iterations done for each sampled configuration while optimising the parameters."/>
            
            <param name="n_epochs" type="integer" value="2" label="Number of training iterations" help="Provide an integer. This specifies the number of deep learning training iterations done after finding the best/optimised configuration of neural network parameters."/>

            <param name="test_share" type="float" value="0.2" label="Share of the test data" help="Provide a real number between 0.0 and 1.0. This set of data is used to look through the prediction accuracy on unseen data after neural network training on an optimised configuration of parameters. It should be set to 0.0 while training for a model to be deployed to production. The minimum value can be 0.0 and maximum value should not be more than 0.5."/>

            <param name="validation_share" type="float" value="0.2" label="Share of the validation data" help="Provide a real number between 0.0 and 1.0. This set of data is used to validate each step of learning while optimising the configurations of parameters. The minimum value can be 0.0 and maximum value should not be more than 0.5."/>
        </section>
        <section name="nn_parameters" title="Neural network parameters" expanded="False">
            <param name="batch_size" type="text" value="30,500" label="Training batch size" help="Provide a comma-separated range to sample the batch size from. The training of the neural network is done using batch learning in this work. The training data is divided into equal batches and for each epoch (a training iteration), all the batches of data are trained one after another. An example: 10,500." />
            
            <param name="units" type="text" value="30,500" label="Number of hidden recurrent units" help="Provide a comma-separated range to sample the number of hidden recurrent units. A higher value provide stronger neural network model (may lead to overfitting in case of smaller data) and smaller value leads to weaker model (may lead to underfitting in case of larger data). An example: 30,500."/>
            
            <param name="embedding_size" type="text" value="30,500" label="Embedding vector size" help="Provide a comma-separated range to sample the embedding size for tools. A fixed-size vector is learned for each tool. This number specifies the fixed-size. An example: 30,500."/>

            <param name="dropout" type="text" value="0.0,0.5" label="Dropout between neural network layers" help="Provide a comma-separated range to sample the amount of dropout to be used after neural netwrok layers. The minimum value should be 0.0 and the maximum value should be 1.0. Dropout is used to prevent or minimize overfitting after each neural network layer. An example: 0.0,0.5"/>

            <param name="spatial_dropout" type="text" value="0.0,0.5" label="Dropout for the embedding layer" help="Provide a comma-separated range to sample the amount of dropout to be used after embedding layer. The minimum value should be 0.0 and the maximum value should be 1.0. Dropout is used to prevent or minimize overfitting in the embedding layer. An example: 0.0,0.5"/>

            <param name="recurrent_dropout" type="text" value="0.0,0.5" label="Dropout for recurrent layers" help="Provide a comma-separated range to sample the amount of dropout to be used for the recurrent layers. The minimum value should be 0.0 and the maximum value should be 1.0. Dropout is used to prevent or minimize overfitting in the recurrent layers. An example: 0.0,0.5"/>

            <param name="learning_rate" type="text" value="0.0001,0.1" label="Learning rate" help="Provide a range of positive real numbers to sample the learning rate. Learning rate defines the speed of neural network learning. A higher value will ensure fast learning and smaller value will ensure slower learning. An example: 0.0001,0.1"/>
            
            <param name="activation_recurrent" type="text" value="elu" label="Name of the activation function for recurrent layers" help="It is a mathematical function that transforms the input of recurrent layers to the following neural network layer."/>
            <param name="activation_output" type="text" value="sigmoid" label="Name of the activation function for output layer" help="It is a mathematical function that transforms the input of the last dense layer to the output of the neural network."/>
            <param name="loss_type" type="text" value="binary_crossentropy" label="Name of the loss function" help="The loss/error function computes an error between the true and predicted output. This error is minimised during neural network learning to be as close to the true output as possible. Root Mean Square Propagation (RMSProp) is used as an optimiser to minimise error computed by this error function."/>
        </section>
    </inputs>
    <outputs>
        <data format="h5" name="outfile_model" label="Model to recommend tools in Galaxy"></data>
    </outputs>
    <tests>
        <test>
            <param name="input_tabular_workflows" value="test_workflows" ftype="tabular"/>
            <param name="input_tabular_tool_usage" value="test_tool_usage" ftype="tabular"/>
            <output name="outfile_model">
                <assert_contents>
                    <has_h5_keys keys="best_parameters,class_weights,compatible_tools,data_dictionary,model_config,weight_0,weight_1,weight_2,weight_3,weight_4,weight_5,weight_6,weight_7,weight_8"/>
                </assert_contents>
            </output>
        </test>
    </tests>
    <help>
        <![CDATA[
**What it does**
It creates a model to recommend tools in Galaxy by learning the connections of tools in workflows. The model is an HDF5 file containing the tool dictionary, weights and configuration of the neural network. The recurrent neural network (Gated Recurrent Units) is used as a deep learner to learn the higher-order dependencies in tool connections of workflows. It takes two tabular files as input - one for the workflows and another for tools' usage frequencies. There are multiple other parameters to be set to find the best configuration of parameters of the neural network.
        ]]>
    </help>
    <citations>
        <citation type="bibtex">
            @ARTICLE{anuprulez_galaxytools,
                Author = {Anup Kumar and Björn Grüning},
                keywords = {bioinformatics, recommendation system, deep learning},
                title = {{Tool recommendation system for Galaxy workflows}},
                url = {https://github.com/anuprulez/galaxytools}
            }
        </citation>
    </citations>
</tool>
