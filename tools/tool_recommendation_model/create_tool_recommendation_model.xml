<tool id="create_tool_recommendation_model" name="Create model to recommend tools" version="0.0.1">
    <description>using deep learning</description>
    <requirements>
        <requirement type="package" version="3.6">python</requirement>
        <requirement type="package" version="1.14.0">tensorflow</requirement>
        <requirement type="package" version="2.2.4">keras</requirement>
        <requirement type="package" version="0.20.1">scikit-learn</requirement>
        <requirement type="package" version="2.9.0">h5py</requirement>
        <requirement type="package" version="1.0">csvkit</requirement>
        <requirement type="package" version="0.1.2">hyperopt</requirement>
    </requirements>
    <version_command>echo "@VERSION@"</version_command>
    <command detect_errors="aggressive">
<![CDATA[
        python '$__tool_directory__/main.py'
            --workflow_file '$input_tabular_workflows'
            --tool_usage_file '$input_tabular_tool_usage'
            --cutoff_date '$data_parameters.input_cutoff_date'
            --maximum_path_length '$data_parameters.input_maximum_path_length'
            --n_epochs '$training_parameters.n_epochs'
            --optimize_n_epochs '$training_parameters.optimize_n_epochs'
            --max_evals '$training_parameters.max_evals'
            --test_share '$training_parameters.test_share'
            --validation_share '$training_parameters.validation_share'
            --batch_size '$nn_parameters.batch_size'
            --units '$nn_parameters.units'
            --embedding_size '$nn_parameters.embedding_size'
            --dropout '$nn_parameters.dropout'
            --spatial_dropout '$nn_parameters.spatial_dropout'
            --recurrent_dropout '$nn_parameters.recurrent_dropout'
            --learning_rate '$nn_parameters.learning_rate'
            --activation_recurrent '$nn_parameters.activation_recurrent'
            --activation_output '$nn_parameters.activation_output'
            --loss_type '$nn_parameters.loss_type'
            --output_model '$outfile_model'
]]>
    </command>
    <inputs>
        <param name="input_tabular_workflows" type="data" format="tabular" label="Dataset containing workflows"/>
        <param name="input_tabular_tool_usage" type="data" format="tabular" label="Dataset containing usage frequencies of tools"/>
        <section name="data_parameters" title="Data parameters" expanded="False">
            <param name="input_cutoff_date" type="text" value="2017-12-01" label="The earliest date from which usage of tools will be extracted" help="Provide a date (in the past) in yyyy-mm-dd format"/>
            <param name="input_maximum_path_length" type="integer" value="25" label="Maximum number of tools in a tool sequence" help="Provide an integer between 1 and 25."/>
        </section>
        <section name="training_parameters" title="Training parameters" expanded="False">
            <param name="n_epochs" type="integer" value="10" label="Number of training iterations" help="Provide an integer."/>
            <param name="optimize_n_epochs" type="integer" value="10" label="Number of training iterations to optimize the neural network parameters" help="Provide an integer."/>
            <param name="max_evals" type="integer" value="10" label="Maximum number of evaluations of different configurations of parameters" help="Provide an integer between 1 and 25."/>
            <param name="test_share" type="float" value="0.2" label="Share of the test data" help="Provide a real number between 0.0 and 1.0. This set of data is used to verify learning after training."/>
            <param name="validation_share" type="float" value="0.2" label="Share of the validation data" help="Provide a real number between 0.0 and 1.0. This set of data is used to validate each step of learning."/>
        </section>
        <section name="nn_parameters" title="Neural network parameters" expanded="False">
            <param name="batch_size" type="text" value="30,500" label="Range of the size of training batch" help="Provide a range (comma separated) to sample the batch size. For example - 10,500." />
            <param name="units" type="text" value="30,500" label="Range of the number of hidden recurrent units" help="Provide a range (comma separated) to sample the batch size. For example - 10,500."/>
            <param name="embedding_size" type="text" value="30,500" label="Range of the size of embedding vector" help="Provide a range (comma separated) to sample the embedding size. For example - 10,500."/>
            
            <param name="dropout" type="text" value="0.0,0.5" label="Dropout between neural network layers" help="Provide a real number between 0.0 and 1.0. For example - 0.25"/>
            <param name="spatial_dropout" type="text" value="0.0,0.5" label="Dropout for the embedding layer" help="Provide a real number between 0.0 and 1.0. For example - 0.25"/>
            <param name="recurrent_dropout" type="text" value="0.0,0.5" label="Dropout for recurrent layers" help="Provide a real number between 0.0 and 1.0. For example - 0.25"/>
            
            <param name="learning_rate" type="text" value="0.0001,0.1" label="Range of the learning rate" help="Provide a range of positive real numbers. For example - 0.0001,0.1"/>
            <param name="activation_recurrent" type="text" value="elu" label="Name of the activation function for recurrent layers" help=""/>
            <param name="activation_output" type="text" value="sigmoid" label="Name of the activation function for output layer" help=""/>         
            <param name="loss_type" type="text" value="binary_crossentropy" label="Name of the loss function" help=""/>
        </section>
    </inputs>
    <outputs>
        <data format="h5" name="outfile_model" label="Trained model"></data>
    </outputs>
    <tests>
        <test>
            <param name="input_tabular_workflows" value="test_workflows.tabular"/>
            <output name="outfile_model">
                <assert_contents>
                    <has_text text="25"/>
                </assert_contents>
            </output>
        </test>
    </tests>
    <help>
        <![CDATA[
**What it does**
It creates a trained model which is used to recommend tools
        ]]>
    </help>
    <citations>
        <citation type="bibtex">
            @ARTICLE{anuprulez_galaxytools,
                Author = {Anup Kumar and Björn Grüning},
                keywords = {bioinformatics, recommendation system, deep learning},
                title = {{Tool recommendation system for Galaxy workflows}},
                url = {https://github.com/anuprulez/galaxytools}
            }
        </citation>
    </citations>
</tool>
